 set [defined, Return type: void, Formals:  y:int** v:int g:int, Locals:  z:int*]
unsat:false,
bo: { v7 -> v7 },
citv: { v7 -> ≠4 },
formula: known=true (no var=var)
               &&
               true (no linear)
               &&
               true (no term_eqs)
               &&
               true (no tableau)
               &&
               {is_int([v7]) = 1},
         pruned={[v7] ≠ 4},
         both=true (no var=var)
              &&
              true (no linear)
              &&
              true (no term_eqs)
              &&
              true (no tableau)
              &&
              {is_int([v7]) = 1}∧{[v7] ≠ 4}
{ roots={ &y=v1, &v=v2, &g=v3 };
  mem  ={ v1 -> { * -> v5 }, v2 -> { * -> v6 }, v3 -> { * -> v7 } };
  attrs={ v4 -> { s&z (variable `z` declared here at line 3 :t0 ) at line 9, column 1,
                  Uninitialized } };}
PRE=[{ roots={ &y=v1, &v=v2, &g=v3 };
       mem  ={ v1 -> { * -> v5 },
               v2 -> { * -> v6 },
               v3 -> { * -> v7 },
               v5 -> { },
               v6 -> { },
               v7 -> { } };
       attrs={ v1 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v2 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v3 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) } };}]
need_specialization=false
skipped_calls={ }
Topl={len=0;content=
       [  ]}
full_trace=3
4
unsat:false,
   bo: { v7 -> [max(4, v7), min(4, v7)] },
   citv: { v7 -> =4 },
   formula: known=true (no var=var)
                  &&
                  true (no linear)
                  &&
                  true (no term_eqs)
                  &&
                  true (no tableau)
                  &&
                  {is_int([v6]) = 1}∧{is_int([v7]) = 1},
            pruned={[v7] = 4},
            both=true (no var=var)
                 &&
                 v7 = 4
                 &&
                 4=v7
                 &&
                 true (no tableau)
                 &&
                 {is_int([v6]) = 1}∧{is_int([v7]) = 1}
   { roots={ &y=v1, &v=v2, &g=v3 };
     mem  ={ v1 -> { * -> v5 },
             v2 -> { * -> v6 },
             v3 -> { * -> v7 },
             v4 -> { * -> v8 },
             v5 -> { * -> v8 },
             v8 -> { * -> v6 } };
     attrs={ v4 -> { s&z (variable `z` declared here at line 3 :t0 ) at line 7, column 9,
                     WrittenTo  },
             v8 -> { WrittenTo  } };}
   PRE=[{ roots={ &y=v1, &v=v2, &g=v3 };
          mem  ={ v1 -> { * -> v5 },
                  v2 -> { * -> v6 },
                  v3 -> { * -> v7 },
                  v5 -> { * -> v8 },
                  v6 -> { },
                  v7 -> { },
                  v8 -> { } };
          attrs={ v1 -> { MustBeInitialized(, t=0),
                          MustBeValid(, None, t=0) },
                  v2 -> { MustBeInitialized(, t=0),
                          MustBeValid(, None, t=0) },
                  v3 -> { MustBeInitialized(, t=0),
                          MustBeValid(, None, t=0) },
                  v5 -> { MustBeInitialized(, t=7),
                          MustBeValid(, None, t=7) },
                  v8 -> { MustBeValid(, None, t=13) } };}]
   need_specialization=false
   skipped_calls={ }
   Topl={len=0;content=
          [  ]}
   full_trace=3
   4
   6
   7

 foo [defined, Return type: void, Formals: None, Locals:  g:int x:int**]
Null Dereference
unsat:false,
bo: { v5 -> 0 },
citv: { v5 -> =0 },
formula: known=true (no var=var)
               &&
               v5 = 0
               &&
               0=v5∧rand()=v3
               &&
               true (no tableau)
               &&
               {is_int([v3]) = 1},
         pruned=true (no atoms),
         both=true (no var=var)
              &&
              v5 = 0
              &&
              0=v5∧rand()=v3
              &&
              true (no tableau)
              &&
              {is_int([v3]) = 1}
{ roots={ };
  mem  ={ v1 -> { * -> v3 }, v2 -> { * -> v5 } };
  attrs={ v1 -> { s&g (variable `g` declared here at line 11 :t0 ) at line 16, column 8,
                  WrittenTo  },
          v2 -> { s&x (variable `x` declared here at line 11 :t0 ) at line 21, column 5,
                  WrittenTo  },
          v5 -> { Invalid ConstantDereference(is assigned to the null pointer) } };}
PRE=[{ roots={ };
       mem  ={ };
       attrs={ };}]
need_specialization=false
skipped_calls={ rand -> call to skipped function occurs here }
Topl={len=0;content=
       [  ]}
full_trace=11
14
15
16
21
unsat:false,
    bo: { v3 -> [max(4, v3), min(4, v3)],
          v6 -> [1, +oo],
          v9 -> [1, +oo],
          v10 -> 1 },
    citv: { v3 -> =4, v6 -> ≥1, v9 -> ≥1, v10 -> =1 },
    formula: known=true (no var=var)
                   &&
                   v6 = a1 +1 ∧ v9 = a3 +1 ∧ v10 = 1
                   &&
                   1=v10∧rand()=v3∧[a1 +1]=v6∧[a3 +1]=v9
                   &&
                   true (no tableau)
                   &&
                   {is_int([v3]) = 1},
             pruned={[v3] = 4}∧{[v6] ≠ 0},
             both=true (no var=var)
                  &&
                  v3 = 4 ∧ v6 = a2 +1 ∧ v9 = a4 +1 ∧ v10 = 1
                  &&
                  1=v10∧4=v3∧rand()=v3∧[a2 +1]=v6∧[a4 +1]=v9
                  &&
                  true (no tableau)
                  &&
                  {is_int([v3]) = 1}∧{[v6] ≠ 0}
    { roots={ };
      mem  ={ v1 -> { * -> v3 },
              v2 -> { * -> v6 },
              v6 -> { * -> v9 },
              v9 -> { * -> v10 } };
      attrs={ v1 -> { s&g (variable `g` declared here at line 11 :t0 ) at line 18, column 9,
                      WrittenTo  },
              v2 -> { s&x (variable `x` declared here at line 11 :t0 ) at line 21, column 5,
                      WrittenTo  },
              v6 -> { Allocated,
                      DynamicType ,
                      Invalid CFree(was invalidated by call to `free()`),
                      UnreachableAt(line 21, column 5),
                      WrittenTo  },
              v9 -> { Allocated,
                      DynamicType ,
                      Invalid CFree(was invalidated by call to `free()`),
                      UnreachableAt(line 21, column 5),
                      WrittenTo  },
              v10 -> { Invalid ConstantDereference(is assigned to the constant 1) } };}
    PRE=[{ roots={ };
           mem  ={ };
           attrs={ };}]
    need_specialization=false
    skipped_calls={ rand -> call to skipped function occurs here }
    Topl={len=0;content=
           [  ]}
    full_trace=11
    14
    15
    16
    17
    18
    19
    21
unsat:false,
        bo: { v3 -> v3, v6 -> [1, +oo], v9 -> [1, +oo], v10 -> 1 },
        citv: { v3 -> ≠4, v6 -> ≥1, v9 -> ≥1, v10 -> =1 },
        formula: known=true (no var=var)
                       &&
                       v6 = a1 +1 ∧ v9 = a3 +1 ∧ v10 = 1
                       &&
                       1=v10∧rand()=v3∧[a1 +1]=v6∧[a3 +1]=v9
                       &&
                       true (no tableau)
                       &&
                       {is_int([v3]) = 1},
                 pruned={[v3] ≠ 4}∧{[v6] ≠ 0},
                 both=true (no var=var)
                      &&
                      v6 = a2 +1 ∧ v9 = a4 +1 ∧ v10 = 1
                      &&
                      1=v10∧rand()=v3∧[a2 +1]=v6∧[a4 +1]=v9
                      &&
                      true (no tableau)
                      &&
                      {is_int([v3]) = 1}∧{[v3] ≠ 4}∧{[v6] ≠ 0}
        { roots={ };
          mem  ={ v1 -> { * -> v3 }, v2 -> { * -> v6 }, v6 -> { * -> v9 } };
          attrs={ v1 -> { s&g (variable `g` declared here at line 11 :t0 ) at line 18, column 9,
                          WrittenTo  },
                  v2 -> { s&x (variable `x` declared here at line 11 :t0 ) at line 21, column 5,
                          WrittenTo  },
                  v6 -> { Allocated,
                          DynamicType ,
                          Invalid CFree(was invalidated by call to `free()`),
                          UnreachableAt(line 21, column 5),
                          WrittenTo  },
                  v9 -> { Allocated,
                          DynamicType ,
                          Invalid CFree(was invalidated by call to `free()`),
                          UnreachableAt(line 21, column 5) },
                  v10 -> { Invalid ConstantDereference(is assigned to the constant 1) } };}
        PRE=[{ roots={ };
               mem  ={ };
               attrs={ };}]
        need_specialization=false
        skipped_calls={ rand -> call to skipped function occurs here }
        Topl={len=0;content=
               [  ]}
        full_trace=11
        14
        15
        16
        17
        18
        19
        21
{AbortProgram unsat:false,
                          bo: { },
                          citv: { },
                          formula: known=true (no var=var)
                                         &&
                                         true (no linear)
                                         &&
                                         true (no term_eqs)
                                         &&
                                         true (no tableau)
                                         &&
                                         true (no atoms),
                                   pruned=true (no atoms),
                                   both=true (no var=var)
                                        &&
                                        true (no linear)
                                        &&
                                        true (no term_eqs)
                                        &&
                                        true (no tableau)
                                        &&
                                        true (no atoms)
                          { roots={ };
                            mem  ={ };
                            attrs={ };}
                          PRE=[{ roots={ };
                                 mem  ={ };
                                 attrs={ };}]
                          need_specialization=false
                          skipped_calls={ rand -> call to skipped function occurs here }
                          Topl={len=0;content=
                                 [  ]}
                          full_trace=11
                          14
                          15
                          16
                          17
                          18}
unsat:false,
                               bo: { v3 -> v3,
                                     v6 -> [1, +oo],
                                     v8 -> 0,
                                     v10 -> 1 },
                               citv: { v3 -> ≠4,
                                       v6 -> ≥1,
                                       v8 -> =0,
                                       v10 -> =1 },
                               formula: known=true (no var=var)
                                              &&
                                              v6 = a1 +1 ∧ v8 = 0 ∧ v10 = 1
                                              &&
                                              0=v8∧1=v10∧rand()=v3
                                              ∧[a1 +1]=v6
                                              &&
                                              true (no tableau)
                                              &&
                                              {is_int([v3]) = 1},
                                        pruned={[v3] ≠ 4}∧{[v6] ≠ 0},
                                        both=true (no var=var)
                                             &&
                                             v6 = a2 +1 ∧ v8 = 0 ∧ v10 = 1
                                             &&
                                             0=v8∧1=v10∧rand()=v3
                                             ∧[a2 +1]=v6
                                             &&
                                             true (no tableau)
                                             &&
                                             {is_int([v3]) = 1}∧{[v3] ≠ 4}
                                             ∧{[v6] ≠ 0}
                               { roots={ };
                                 mem  ={ v1 -> { * -> v3 },
                                         v2 -> { * -> v6 },
                                         v6 -> { * -> v8 } };
                                 attrs={ v1 -> { s&g (variable `g` declared here at line 11 :t0
                                                      ) at line 18, column 9,
                                                 WrittenTo  },
                                         v2 -> { s&x (variable `x` declared here at line 11 :t0
                                                      ) at line 21, column 5,
                                                 WrittenTo  },
                                         v6 -> { Allocated,
                                                 DynamicType ,
                                                 Invalid CFree(was invalidated by call to `free()`),
                                                 UnreachableAt(line 21, column 5),
                                                 WrittenTo  },
                                         v8 -> { Invalid ConstantDereference(is assigned to the null pointer) },
                                         v10 -> { Invalid ConstantDereference(is assigned to the constant 1) } };}
                               PRE=[{ roots={ };
                                      mem  ={ };
                                      attrs={ };}]
                               need_specialization=false
                               skipped_calls={ rand -> call to skipped function occurs here }
                               Topl={len=0;content=
                                      [  ]}
                               full_trace=11
                               14
                               15
                               16
                               17
                               18
                               19
                               21