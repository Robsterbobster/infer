 set [defined, Return type: void, Formals:  y:int** v:int g:int, Locals:  z:int*]
unsat:false,
bo: { v7 -> v7 },
citv: { v7 -> ≠4 },
formula: known=true (no var=var)
               &&
               true (no linear)
               &&
               true (no term_eqs)
               &&
               true (no tableau)
               &&
               {is_int([v7]) = 1},
         pruned={[v7] ≠ 4},
         both=true (no var=var)
              &&
              true (no linear)
              &&
              true (no term_eqs)
              &&
              true (no tableau)
              &&
              {is_int([v7]) = 1}∧{[v7] ≠ 4}
{ roots={ &y=v1, &v=v2, &g=v3 };
  mem  ={ v1 -> { * -> v5 }, v2 -> { * -> v6 }, v3 -> { * -> v7 } };
  attrs={ v4 -> { s&z (variable `z` declared here at line 3 :t0 ) at line 9, column 1,
                  Uninitialized } };}
PRE=[{ roots={ &y=v1, &v=v2, &g=v3 };
       mem  ={ v1 -> { * -> v5 },
               v2 -> { * -> v6 },
               v3 -> { * -> v7 },
               v5 -> { },
               v6 -> { },
               v7 -> { } };
       attrs={ v1 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v2 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v3 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) } };}]
need_specialization=false
skipped_calls={ }
Topl={len=0;content=
       [  ]}
full_trace=3
4

 set [defined, Return type: void, Formals:  y:int** v:int g:int, Locals:  z:int*]
unsat:false,
bo: { v7 -> [max(4, v7), min(4, v7)] },
citv: { v7 -> =4 },
formula: known=true (no var=var)
               &&
               true (no linear)
               &&
               true (no term_eqs)
               &&
               true (no tableau)
               &&
               {is_int([v6]) = 1}∧{is_int([v7]) = 1},
         pruned={[v7] = 4},
         both=true (no var=var)
              &&
              v7 = 4
              &&
              4=v7
              &&
              true (no tableau)
              &&
              {is_int([v6]) = 1}∧{is_int([v7]) = 1}
{ roots={ &y=v1, &v=v2, &g=v3 };
  mem  ={ v1 -> { * -> v5 },
          v2 -> { * -> v6 },
          v3 -> { * -> v7 },
          v4 -> { * -> v8 },
          v5 -> { * -> v8 },
          v8 -> { * -> v6 } };
  attrs={ v4 -> { s&z (variable `z` declared here at line 3 :t0 ) at line 7, column 9,
                  WrittenTo  },
          v8 -> { WrittenTo  } };}
PRE=[{ roots={ &y=v1, &v=v2, &g=v3 };
       mem  ={ v1 -> { * -> v5 },
               v2 -> { * -> v6 },
               v3 -> { * -> v7 },
               v5 -> { * -> v8 },
               v6 -> { },
               v7 -> { },
               v8 -> { } };
       attrs={ v1 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v2 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v3 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v5 -> { MustBeInitialized(, t=7), MustBeValid(, None, t=7) },
               v8 -> { MustBeValid(, None, t=13) } };}]
need_specialization=false
skipped_calls={ }
Topl={len=0;content=
       [  ]}
full_trace=3
4
6
7

 set [defined, Return type: void, Formals:  y:int** v:int g:int, Locals:  z:int*]