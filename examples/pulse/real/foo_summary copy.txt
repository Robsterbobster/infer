 foo [defined, Return type: int, Formals:  re:char const *, Locals:  i:int]
unsat:false,
bo: { v5 -> [v5, min(5, v5)] },
citv: { v5 -> ≤5 },
formula: known=true (no var=var)
               &&
               true (no linear)
               &&
               true (no term_eqs)
               &&
               true (no tableau)
               &&
               {is_int([v2]) = 1}∧{is_int([v5]) = 1},
         pruned={[v5] ≤ 5},
         both=true (no var=var)
              &&
              v5 = -a2 +5
              &&
              [-a2 +5]=v5
              &&
              true (no tableau)
              &&
              {is_int([v2]) = 1}∧{is_int([v5]) = 1}
{ roots={ &re=v1, &return=v8 };
  mem  ={ v1 -> { * -> v2 },
          v2 -> { },
          v4 -> { * -> v5 },
          v5 -> { },
          v8 -> { * -> v2 } };
  attrs={ v1 -> { MustBeValid(, None, t=0) },
          v2 -> { ISLAbduced  },
          v3 -> { MustBeValid(, None, t=0), Uninitialized },
          v4 -> { s&i (variable `i` declared here at line 12 :t1 ) at line 13, column 7,
                  MustBeValid(, None, t=0),
                  WrittenTo  },
          v5 -> { MustBeValid(, None, t=3) },
          v8 -> { MustBeValid(, None, t=14), WrittenTo  } };}
PRE=[{ roots={ &re=v1 };
       mem  ={ v1 -> { * -> v2 }, v2 -> { } };
       attrs={ v1 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) },
               v2 -> { ISLAbduced ,
                       MustBeInitialized(, t=11),
                       MustBeValid(, None, t=11) } };}]
need_specialization=false
skipped_calls={ }
Topl={len=0;content=
       [  ]}
full_trace=11
12
13
16

 foo [defined, Return type: int, Formals:  re:char const *, Locals:  i:int]
{ISLLatentMemoryError unsat:false,
                      bo: { },
                      citv: { },
                      formula: known=true (no var=var)
                                     &&
                                     true (no linear)
                                     &&
                                     true (no term_eqs)
                                     &&
                                     true (no tableau)
                                     &&
                                     true (no atoms),
                               pruned=true (no atoms),
                               both=true (no var=var)
                                    &&
                                    true (no linear)
                                    &&
                                    true (no term_eqs)
                                    &&
                                    true (no tableau)
                                    &&
                                    true (no atoms)
                      { roots={ &re=v1 };
                        mem  ={ v1 -> { * -> v2 } };
                        attrs={ v1 -> { MustBeValid(, None, t=0) },
                                v2 -> { Invalid CFree(was invalidated by call to `free()`) } };}
                      PRE=[{ roots={ &re=v1 };
                             mem  ={ v1 -> { * -> v2 } };
                             attrs={ v1 -> { MustBeInitialized(, t=0),
                                             MustBeValid(, None, t=0) },
                                     v2 -> { Invalid CFree(was invalidated by call to `free()`) } };}]
                      need_specialization=false
                      skipped_calls={ }
                      Topl={len=0;content=
                             [  ]}
                      full_trace=11
                      12
                      13
                      16}

 foo [defined, Return type: int, Formals:  re:char const *, Locals:  i:int]
{ISLLatentMemoryError unsat:false,
                      bo: { },
                      citv: { },
                      formula: known=true (no var=var)
                                     &&
                                     true (no linear)
                                     &&
                                     true (no term_eqs)
                                     &&
                                     true (no tableau)
                                     &&
                                     true (no atoms),
                               pruned=true (no atoms),
                               both=true (no var=var)
                                    &&
                                    true (no linear)
                                    &&
                                    true (no term_eqs)
                                    &&
                                    true (no tableau)
                                    &&
                                    true (no atoms)
                      { roots={ &re=v1 };
                        mem  ={ v1 -> { * -> v2 } };
                        attrs={ v1 -> { MustBeValid(, None, t=0) },
                                v2 -> { Invalid ConstantDereference(is assigned to the null pointer) } };}
                      PRE=[{ roots={ &re=v1 };
                             mem  ={ v1 -> { * -> v2 } };
                             attrs={ v1 -> { MustBeInitialized(, t=0),
                                             MustBeValid(, None, t=0) },
                                     v2 -> { Invalid ConstantDereference(is assigned to the null pointer) } };}]
                      need_specialization=false
                      skipped_calls={ }
                      Topl={len=0;content=
                             [  ]}
                      full_trace=11
                      12
                      13
                      16}

 foo [defined, Return type: int, Formals:  re:char const *, Locals:  i:int]
unsat:false,
bo: { v5 -> [max(6, v5), v5], v6 -> 0 },
citv: { v5 -> ≥6, v6 -> =0 },
formula: known=true (no var=var)
               &&
               v6 = 0
               &&
               0=v6
               &&
               true (no tableau)
               &&
               {is_int([v5]) = 1},
         pruned={5 < [v5]},
         both=true (no var=var)
              &&
              v5 = a1 +6 ∧ v6 = 0
              &&
              0=v6∧[a1 +6]=v5
              &&
              true (no tableau)
              &&
              {is_int([v5]) = 1}
{ roots={ &re=v1, &return=v7 };
  mem  ={ v1 -> { * -> v2 },
          v2 -> { },
          v4 -> { * -> v5 },
          v5 -> { },
          v7 -> { * -> v6 } };
  attrs={ v1 -> { MustBeValid(, None, t=0) },
          v3 -> { MustBeValid(, None, t=0), Uninitialized },
          v4 -> { s&i (variable `i` declared here at line 12 :t1 ) at line 13, column 7,
                  MustBeValid(, None, t=0),
                  WrittenTo  },
          v5 -> { MustBeValid(, None, t=3) },
          v6 -> { Invalid ConstantDereference(is assigned to the null pointer) },
          v7 -> { MustBeValid(, None, t=10), WrittenTo  } };}
PRE=[{ roots={ &re=v1 };
       mem  ={ v1 -> { * -> v2 }, v2 -> { } };
       attrs={ v1 -> { MustBeInitialized(, t=0), MustBeValid(, None, t=0) } };}]
need_specialization=false
skipped_calls={ }
Topl={len=0;content=
       [  ]}
full_trace=11
12
13
14